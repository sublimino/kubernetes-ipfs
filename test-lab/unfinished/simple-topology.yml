name: Simple topology test
config:
  nodes: 3
  selector: run=go-ipfs-stress
  times: 3
  expected:
      successes: 1
      failures: 0
      timeouts: 0
steps:
  - name: Remove all bootstrap peers from nodes 2 and 3
    on_node: 2
    end_node: 3
    cmd: for node in $(ipfs bootstrap list); do ipfs bootstrap rm $node; done;
    timeout: 0
  - name: Remove all normal peers from nodes 2 and 3
    on_node: 2
    end_node: 3
    cmd: for node in $(ipfs swarm peers); do ipfs swarm disconnect $node; done;
    timeout: 0
  - name: Create small file on node 1
    on_node: 1
    cmd: "head -c 10 /dev/urandom | base64 > /tmp/file.txt
          && cat /tmp/file.txt && ipfs add -q /tmp/file.txt"
    timeout: 0
    outputs: 
    - line: 0
      save_to: FILE
    - line: 1
      save_to: HASH
  - name: Get connection info from node 1
    on_node: 1
    cmd: ipfs id -f "<addrs>" | grep -E '/ip4/(172\.31|10)\.'
    outputs:
    - line: 0
      save_to: LANADDR_1
  - name: Connect to node 1 from node 2
    on_node: 2
    inputs:
      - LANADDR_1
    cmd: ipfs swarm connect $LANADDR_1
  - name: Get connection info from node 2
    on_node: 2
    cmd: ipfs id -f "<addrs>" | grep -E '/ip4/(172\.31|10)\.'
    outputs:
    - line: 0
      save_to: LANADDR_2
  - name: Connect to node 2 from node 3
    on_node: 3
    inputs:
      - LANADDR_2
    cmd: ipfs swarm connect $LANADDR_2
  - name: Cat file
    on_node: 3
    inputs:
      - FILE
      - HASH
    cmd: ipfs cat $HASH
    timeout: 10
    assertions:
    - line: 0
      should_be_equal_to: FILE
# TODO: have each node save its final topology
