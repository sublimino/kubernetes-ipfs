name: 1 user uploads a file, 10 nodes download it

config:
  nodes: 3
  selector: run=go-ipfs-stress
  times: 3
  expected:
      successes: 6
      failures: 0
      timeouts: 0

steps:

  - name: Remove all bootstrap peers from every node
    on_node: 1
    end_node: 3
    cmd: for node in $(ipfs bootstrap list); do ipfs bootstrap rm $node; done;
    timeout: 0

  - name: Remove all normal peers from every node
    on_node: 1
    end_node: 3
    cmd: for node in $(ipfs swarm peers); do ipfs swarm disconnect $node; done;
    timeout: 0

  - name: Get connection info from node 1
    on_node: 1
    cmd: ipfs id -f "<addrs>" | grep -E '/ip4/(172\.31|10)\.'
    outputs:
    - line: 0
      save_to: LANADDR

  - name: Connect to node 1 from every other node
    on_node: 2
    end_node: 3
    inputs:
      - LANADDR
    cmd: ipfs swarm connect $LANADDR

  - name: Create 5MB File
    on_node: 1
    cmd: head -c 5000000 /dev/urandom | base64 > /tmp/file.txt && md5sum /tmp/file.txt | cut -d ' ' -f 1 && ipfs add -q /tmp/file.txt
    timeout: 0
    outputs: 
    - line: 0
      save_to: FILE
    - line: 1
      save_to: HASH

  - name: Cat file on rest of nodes
    on_node: 2
    end_node: 3
    inputs:
      - HASH
    cmd: ipfs cat $HASH | md5sum | cut -d ' ' -f 1
    timeout: 25
    assertions:
    - line: 0
      should_be_equal_to: FILE
